<div class="container">
  <div class="row">
    <div class="col-12 text-center">
      <br>
      <h1 class="mb-5 mt-4 text-color border-top border-bottom p-2" style="font-size: 50px;"><strong>Discover all our pets</strong></h1>
    </div>

    <div class="mb-5 rounded-5" id="mapContainer" style="width: 98%; height: 300px; position: relative;"
      data-controller="map"
      data-map-markers-value="<%= @markers.to_json %>"
      data-map-api-key-value="<%= ENV['MAPBOX_API_KEY'] %>">
      <!-- Contenu de votre carte ou initialisation de la carte ici -->

      <!-- Script pour ajouter l'√©l√©ment repr√©sentant l'animal √† l'int√©rieur de la carte -->
      <script>
        const mapContainer = document.getElementById('mapContainer');
        const mapWidth = mapContainer.clientWidth - 50; // Largeur de la carte moins la largeur de l'√©l√©ment animal
        const mapHeight = mapContainer.clientHeight - 50; // Hauteur de la carte moins la hauteur de l'√©l√©ment animal

        const animalMarker = document.createElement('div');
        animalMarker.id = 'animal';
        animalMarker.style.position = 'absolute';
        animalMarker.style.top = '70px'; // Ajustez ces valeurs pour positionner l'√©l√©ment animal sur la carte
        animalMarker.style.left = '40px'; // Ajustez ces valeurs pour positionner l'√©l√©ment animal sur la carte
        animalMarker.style.fontSize = '50px'; // Ajustez la taille du dauphin

        // Utilisation d'un emoji pour repr√©senter l'animal (remplacez le contenu par l'emoji souhait√©)
        animalMarker.textContent = 'üê¨'; // Remplacez cela par l'emoji de votre choix

        mapContainer.appendChild(animalMarker);

        // Variable pour stocker la direction de d√©placement actuelle
        let currentDirection = Math.random() < 0.5 ? 'horizontal' : 'vertical';

        // Fonction pour d√©placer l'animal soit horizontalement soit verticalement
        function moveAnimal() {
          const step = 5; // Pas de d√©placement

          // Obtenir les positions actuelles de l'animal
          let currentTop = parseInt(animalMarker.style.top) || 0;
          let currentLeft = parseInt(animalMarker.style.left) || 0;

          if (currentDirection === 'horizontal') {
            // D√©placement horizontal
            currentLeft += step;

            // Changer de direction si atteint la fin horizontale de la carte
            if (currentLeft >= mapWidth) {
              currentLeft = mapWidth;
              currentDirection = 'vertical';
            }
          } else {
            // D√©placement vertical
            currentTop += step;

            // Changer de direction si atteint la fin verticale de la carte
            if (currentTop >= mapHeight) {
              currentTop = mapHeight;
              currentDirection = 'horizontal';
            }
          }

          // Appliquer les nouvelles positions √† l'animal
          animalMarker.style.top = currentTop + 'px';
          animalMarker.style.left = currentLeft + 'px';
        }

        // D√©clencher le mouvement toutes les 100 millisecondes
        setInterval(moveAnimal, 100);
      </script>
    </div>

    <% @pets.each do |pet| %>
      <div class="col-lg-3 col-md-4 col-sm-6 col-12">
        <div class="card">
          <div class="card-img-container">
            <img src="<%= pet.photo_url %>" class="card-img-top" alt="Pet Image">
          </div>
          <div class="card-body">
            <h4 class="card-title"><%= pet.name %></h4>
            <p class="card-text text-truncate"><%= pet.description %></p>
            <button class="btn custom-btn"><%= link_to "Book", pet_path(pet), id: "color" %></button>
          </div>
        </div>
      </div>
    <% end %>
  </div>
</div>
